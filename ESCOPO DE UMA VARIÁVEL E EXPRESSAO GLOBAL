<?php


# ESCOPO E CICLO DE VIDA DE UMA VARIAVEL

# Normalmente uma variavel em PHP passa a existir a partir do local onde é iniciada,
# e existe até ao final da pagina.
# No entanto, quanto temos variaveis dentro de uma função, elas tem um ciclo de vida limitado


$variavel = 10;

echo "<p>$variavel</p>";

funcao(20, 30);

// echo $<p>$a e $b</p>; # estas variaveis existem dentro da função, mas não existem fora 

function funcao($a, $b){
    echo "<p>$variavel</p>";
    echo "<p>$a e $b</p>";

}

function funcao2(){
    $v = 100;
}
funcao2();
echo "<p>$v</p>";


# GLOBAL 

# neste exemplo, a variavel $a existe em dois escopos diferentes
$a = 10;
function funcao3(){
    //global $a; = traz as variaveis de fora da função, para dentro da função
    $a = 20;
}
funcao3();
echo "<p>$a</p>";



# outro exemplo de alcançar o mesmo objetivo
$b = 100;
function funcao4(){
    $b = 200;
    // $GLOBALS['b'] = 200;
}
funcao4();
echo "<p>$b</p>";




//-----------------------

# ao contrario de outras linguagens, no PHP, as variaveis definidas dentro dos loops ou instruções condicionais,
# não são destruidas dentro desse escopo.

if (true) {
    $a = 10;
}

echo "<p>$a</p>";

for ($i = 0; $i < 10; $i++){
    $x = 1000;
}

echo "<p>$i e $x</p>";


# Existe ainda um outro contexto de escopo de variveis, quando estas são definidas dentro de uma classe,
# passando a ser designadas por propriedades de uma classe.
